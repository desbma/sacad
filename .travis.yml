language: python
cache:
  pip: true
  directories:
    - $HOME/.cache/ci/sacad
matrix:
  include:
    - python: "3.5"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=0
    - python: "3.5-dev"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=0
    - python: "3.6"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=1
    - python: "3.6"
      env: NATIVE_TEST=0 WINDOWS_TEST=1 PYPI_DEPLOY=0
    - python: "3.6-dev"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=0
    - python: "3.7"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=0
    - python: "3.7-dev"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=0
    - python: "3.8"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=0
    - python: "3.8-dev"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=0
    - python: "pypy3"
      env: NATIVE_TEST=1 WINDOWS_TEST=0 PYPI_DEPLOY=0 PYPY3_PYTHON_VERSION=3.5 PYPY3_PYTHON_VERSION=3.6 PYPY3_VERSION=7.2.0 PYPY3_SHA256=59099546b4dee56edcde2c9ff706687e35bb2aa94354cd56daa78aca036bd3d8
  allow_failures:
    - python: "3.5-dev"
    - python: "3.6-dev"
    - python: "3.7-dev"
    - python: "3.8-dev"
    - python: "pypy3"
    - env: NATIVE_TEST=0 WINDOWS_TEST=1 PYPI_DEPLOY=0
  fast_finish: true
before_install:
  - "export CI_CACHE_DIR=~/.cache/ci/sacad"
  - "if [ $WINDOWS_TEST -eq 1 ]; then curl https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add - && sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/; fi"
  - "sudo apt-get -q update"
  - "if [ $TRAVIS_PYTHON_VERSION != 'pypy3' ]; then pip install -U pip; fi"
  - "if [ $TRAVIS_PYTHON_VERSION = 'pypy3' ]; then mkdir -p $CI_CACHE_DIR/pypy && echo $PYPY3_SHA256  $CI_CACHE_DIR/pypy/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2 | sha256sum --status -c || curl -f -L https://github.com/squeaky-pl/portable-pypy/releases/download/pypy${PYPY3_PYTHON_VERSION}-${PYPY3_VERSION}/pypy${PYPY3_PYTHON_VERSION}-${PYPY3_VERSION}-linux_x86_64-portable.tar.bz2 > $CI_CACHE_DIR/pypy/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2; fi"
  - "if [ $TRAVIS_PYTHON_VERSION = 'pypy3' ]; then echo $PYPY3_SHA256  $CI_CACHE_DIR/pypy/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2 | sha256sum --status -c && tar -xjf $CI_CACHE_DIR/pypy/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2 -C ~ && deactivate && ~/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable/bin/virtualenv-pypy ~/pypy3-venv && . ~/pypy3-venv/bin/activate; fi"
install:
  - "if [ $NATIVE_TEST -eq 1 ]; then sudo apt-get -V install libxml2-dev libxslt1-dev; fi" # lxml dependencies
  - "if [ $NATIVE_TEST -eq 1 ]; then pip install -r requirements.txt; fi"
  - "if [ $NATIVE_TEST -eq 1 ]; then pip install coveralls; fi"
  - "if [ $NATIVE_TEST -eq 1 ]; then sudo apt-get -V install optipng jpegoptim; fi"
  - "if [ $WINDOWS_TEST -eq 1 ]; then sudo apt-get -V install winehq-stable p7zip-full; fi"
script:
  - "if [ $NATIVE_TEST -eq 1 ]; then travis_retry coverage run --source=sacad setup.py test; fi"
  - "if [ $WINDOWS_TEST -eq 1 ]; then pushd win && TEST_DL_CACHE_DIR=$CI_CACHE_DIR/test DOWNLOAD_DIR=$CI_CACHE_DIR/build WINEARCH=win32 make test && popd; fi"
  - "if [ $WINDOWS_TEST -eq 1 ]; then pushd win && TEST_DL_CACHE_DIR=$CI_CACHE_DIR/test DOWNLOAD_DIR=$CI_CACHE_DIR/build WINEARCH=win64 make test && popd; fi"
after_success:
  - "if [ $NATIVE_TEST -eq 1 ]; then coveralls; fi"
before_deploy:
  - "if [ $WINDOWS_TEST -eq 1 ]; then pushd win && WINEARCH=win32 make all && popd; fi"
  - "if [ $WINDOWS_TEST -eq 1 ]; then pushd win && WINEARCH=win64 make all && popd; fi"
deploy:
  - provider: releases
    api_key:
      secure: "B6gBCH4ecbVXrGKwEehal5tbYOtyvzbDvdwCXnAf87h18CIuRdzIMRkFIYd06cIYXzTtkptaSvC1euZYWUP8NVSoiZmpLNumQCJMANh/eDcBKrfm4fFvsTwq5fQ3NDauJH4VJreh73pex8ke+NmyRy+BfgEj4FO8pxBbN9/Q/Sw="
    file:
      - "win/sacad_win32.zip"
      - "win/sacad_win32.7z"
      - "win/sacad_win32.exe"
      - "win/sacad_win64.zip"
      - "win/sacad_win64.7z"
      - "win/sacad_win64.exe"
    skip_cleanup: true
    on:
      tags: true
      branch: master
      condition: $WINDOWS_TEST = 1
  - provider: pypi
    user: desbma
    password:
      secure: "WJGhFJrX/S42EhXIj6oEmOxEoMSHLAtVyZe7EQm0ho5A5MH0NR64H8pPlrPuzHl/AZmxiSz/70G5xGlV6anaxjEOH8FFQ+lrjwgp0H4a1hVImFUZi45QHRq1E2GhzxMEsaAq1K5BdAYXOkIHCa4+jsFbZRcrDNO72jCIJfvX1q0="
    on:
      tags: true
      branch: master
      condition: $PYPI_DEPLOY = 1
notifications:
  email:
    recipients:
      - secure: "g5HaEKHvapImYa1t/2DfW86YAEDUwAcPlbKJ/SZSUkH9POCtdc0TayLGuS9ByY/2cOXiUyCwbQ3r3qMs9p14ev6wKo5NMOYJsR3ijDB8Qh6ri182TmeXWlWLQrLWAZD5NTYdhUoK4taEAbnLV+AQuZwAUBkyX8tFGHQre3/IYl4="
    on_success: always
    on_failure: always
